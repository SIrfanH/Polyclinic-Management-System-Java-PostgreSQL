/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sifapoliklinigi;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author sayid, mounes
 */
public class HastaOdemeSayfasi extends javax.swing.JPanel {

    /**
     * Creates new form hastaOdemeSayfasi
     */
    
    private Doktor doktor;
    private Gorevli gorevli;
    private Klinik klinik;
    private Hasta hasta;
    private Randevu randevu;
    private Muayene muayene;
    PostgreConnector postgresql = new PostgreConnector();
    
    
    public HastaOdemeSayfasi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hastaBorcKimlikNoTextField = new javax.swing.JTextField();
        borcSorgulaButon = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        borcGostermeTextField = new javax.swing.JTextArea();
        odeButon = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Hastanın Kimlik Numarası:");

        hastaBorcKimlikNoTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        borcSorgulaButon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        borcSorgulaButon.setText("Borç Sorgula");
        borcSorgulaButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borcSorgulaButonActionPerformed(evt);
            }
        });

        borcGostermeTextField.setEditable(false);
        borcGostermeTextField.setColumns(20);
        borcGostermeTextField.setRows(5);
        jScrollPane1.setViewportView(borcGostermeTextField);

        odeButon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        odeButon.setText("Öde");
        odeButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odeButonActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz", "Nakit", "Kredi Kartı" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(borcSorgulaButon)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(82, 82, 82)
                                .addComponent(hastaBorcKimlikNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 111, Short.MAX_VALUE)
                            .addComponent(odeButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(hastaBorcKimlikNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(borcSorgulaButon)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(odeButon)
                .addContainerGap(109, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void borcSorgulaButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borcSorgulaButonActionPerformed
        // TODO add your handling code here:
        borcGostermeTextField.setText("");
        String borcAciklama = "";
        double muayeneUcreti = 0;
        
        
        Connection con = postgresql.getInstance();
        String kimlikNo = hastaBorcKimlikNoTextField.getText();
        if(!kimlikNo.equals("")){
            try {
                Statement stmt = con.createStatement();
                String komut = String.format("select doktor_ad, doktor_soyad, muayene_ucreti \n" +
                                                    "from doktorlar d, muayeneler m\n" +
                                                "where d.doktor_no = m.doktor_no and hasta_no = %s and odeme_durumu = 0", kimlikNo);
                ResultSet rs = stmt.executeQuery(komut);
                
                if(!rs.wasNull()){
                    while(rs.next()){
                    borcAciklama = borcAciklama+rs.getString("doktor_ad")+" "+rs.getString("doktor_soyad")+" Muayene Ucreti "+rs.getString("muayene_ucreti")+"\n";
                    muayeneUcreti = muayeneUcreti + Double.parseDouble(rs.getString("muayene_ucreti"));
                    }
                    komut = String.format("select *from kayitli_hastalar where HASTA_NO = %s and HASTA_SIGORTA_DURUMU = 1", kimlikNo);
                    rs = stmt.executeQuery(komut);
                    if(rs.next()){
                        muayeneUcreti = muayeneUcreti*0.4;
                        borcAciklama = borcAciklama+"Sigorta Indirimli Ücret"+" "+muayeneUcreti+"\n";
                    }
                
                    borcGostermeTextField.setText(borcAciklama);                
                }else{
                    JOptionPane.showMessageDialog(this, "Hasta bulunmamış");
                }

                

          
            } catch (SQLException e) {
                System.out.println(e);
                System.out.println("SQL EXception");
            }   
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen Kimlik Numarası Alanını Doldurunuz");
        }
    }//GEN-LAST:event_borcSorgulaButonActionPerformed

    private void odeButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odeButonActionPerformed
        // TODO add your handling code here:
        String kimlikNo = hastaBorcKimlikNoTextField.getText();
        Connection con = postgresql.getInstance();
        if(!borcGostermeTextField.getText().equals("")){
            try {
                Statement stmt = con.createStatement();
                String komut = String.format("update muayeneler set odeme_durumu = 1 where hasta_no = %s", kimlikNo);
                int result = stmt.executeUpdate(komut);
                if(0 < result)
                    JOptionPane.showMessageDialog(this, "Işlem tamamlandı");
                else
                    JOptionPane.showMessageDialog(this, "Muayene bulunmamış");
            } catch (SQLException e) {
                System.out.println(e);
                System.out.println("SQL EXception");
                JOptionPane.showMessageDialog(this, "Hata Oluştu");
            }   
            
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen Önce Borç Araması Yapınız");
        }
        
    }//GEN-LAST:event_odeButonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea borcGostermeTextField;
    private javax.swing.JButton borcSorgulaButon;
    private javax.swing.JTextField hastaBorcKimlikNoTextField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton odeButon;
    // End of variables declaration//GEN-END:variables
}
